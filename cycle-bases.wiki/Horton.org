The Horton algorithm is basically a greedy algorithm (with the weight being the length of the cycles) on a matroid of a certain candidate set. It extends a subbasis of the MCB by the shortest potential base cycle considered if it is linear independent of the other cycles of said subbasis.

The candidate set is the set of all [[edge-short cycle]]s, since all cycles in a MCB are edge-short, and the number of edge-short cycles is limited by E^{2}.

For now, the set of edge-short cycles is constructed by the [[https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm][Dijkstra algorithm]] (\forall (a,b) \in V we find a shortest path P(a,b)).

Now for v \in V, e=(x,y) \in E:
  if P(x,v) \cap P(y,v) = {v} (if v is the only vertex in both paths), add C=P(v,x) \oplus P(v,y) \oplus (x,y) to the candidate set

Now this algorithms gives a candidate set bounded by the number of vertices and edges in the graph, which is sorted and the greedy algorithm applied.

The greedy algorithm runs over a sorted (by path length) list of candidate cycles grouped by their path length extending a subbase if it is linearly independent w.r.t. the subbase of shorter cycles (in order to speed up the test for linear independence.

